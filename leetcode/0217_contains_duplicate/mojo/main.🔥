from python import Python
from time import now


fn contains_duplicate_brute_force(blocks: PythonObject)  raises -> Bool: 
    for i in range(0, blocks.__len__()-1):
        for j in range(i+1, blocks.__len__()):
            if blocks[i] == blocks[j]:
                return True
    return False

fn contains_duplicate_sorting(blocks: PythonObject) raises -> Bool:
    _ = blocks.sort()
    for i in range(0, blocks.__len__()-1):
        if blocks[i] == blocks[i+1]:
            return True
    return False


fn contains_duplicate_dictionary(blocks: PythonObject) raises -> Bool:
        
    let dictionary = Python.dict()

    for i in range(0, blocks.__len__()):
        print(dictionary.get(blocks[i]))
        if dictionary.get(blocks[i]) != None:
            return True
        else: 
            dictionary[blocks[i]] = True   
    return False



fn main() raises:
    var t0a = now()
    print("Solution #1: Brute force way")
    var blocks: PythonObject = PythonObject([1,2,3,1])
    var results: Bool = contains_duplicate_brute_force(blocks)
    print(blocks)
    print(results)
    var t1a = now()
    print("Time: ", t1a - t0a)

    var t0b = now()
    print("Solution #2: Sorting the list")
    blocks = PythonObject([1,2,3,1])
    results = contains_duplicate_sorting(blocks)
    print(blocks)
    print(results)
    var t1b = now()
    print("Time: ", t1b - t0b)

    var t0c = now()
    print("Solution #3: Dictionary way")
    blocks = PythonObject([1,2,3, 1])
    results = contains_duplicate_dictionary(blocks)
    print(blocks)
    print(results)
    var t1c = now()
    print("Time: ", t1c - t0c)


   
    
